---
import { GAMENEWS_API, GAMENEWS_TOKEN } from '../config/config';
import GameNews from '../islands/GameNews/GameNews';
import type { Segment } from '../models/interfaces/segments';
import type { WpPage, WpPost } from '../models/interfaces/wordpress';
import LinkCards from './LinkCards.astro';
import PostInfo from './PostInfo.astro';
import PostList from './PostList.astro';
import TableOfContents from './TableOfContents.astro';

interface Props {
  data: {
    page?: WpPage;
    post?: WpPost;
    html: string;
    segments: Segment[];
  };
}

const { data }: Props = Astro.props;

const { post, html, segments } = data;
---

<Fragment>
  {
    segments.map((segment) => {
      if (segment.type === 'html') {
        return <Fragment set:html={segment.content} />;
      } else if (segment.type === 'component') {
        // Se selecciona el componente a renderizar
        // ----------------------------------------
        if (segment.component === 'GameNews') {
          const from = segment.props?.from || null;

          const api = {
            url: from
              ? `${GAMENEWS_API}/news/${from}/paginated`
              : `${GAMENEWS_API}/news/paginated`,
            token: GAMENEWS_TOKEN,
          };

          return <GameNews client:load from={from} api={api} />;
        }

        if (segment.component === 'LinkCards') {
          return <LinkCards />;
        }

        if (segment.component === 'PostList') {
          return <PostList category={segment.props?.category || ''} />;
        }

        if (segment.component === 'PostInfo') {
          return <PostInfo post={post!} html={html} />;
        }

        if (segment.component === 'TableOfContents') {
          return (
            <TableOfContents
              title={segment.props?.title || null}
              headings={segment.props?.headings || null}
            />
          );
        }

        // Si no se encuentra el componente, se renderiza un fragment vac√≠o
        return <Fragment />;
      }
    })
  }
</Fragment>
